{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/mnist/mnist-canvas/mnist-canvas.component.css","webpack:///./src/app/mnist/mnist-canvas/mnist-canvas.component.html","webpack:///./src/app/mnist/mnist-canvas/mnist-canvas.component.ts","webpack:///./src/app/mnist/mnist-container/mnist-container.component.css","webpack:///./src/app/mnist/mnist-container/mnist-container.component.html","webpack:///./src/app/mnist/mnist-container/mnist-container.component.ts","webpack:///./src/app/mnist/mnist-data.ts","webpack:///./src/app/mnist/mnist-img/mnist-img.component.css","webpack:///./src/app/mnist/mnist-img/mnist-img.component.html","webpack:///./src/app/mnist/mnist-img/mnist-img.component.ts","webpack:///./src/app/mnist/mnist-pixel/mnist-pixel.component.css","webpack:///./src/app/mnist/mnist-pixel/mnist-pixel.component.html","webpack:///./src/app/mnist/mnist-pixel/mnist-pixel.component.ts","webpack:///./src/app/mnist/mnist.module.ts","webpack:///./src/app/mnist/mnist.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///node-fetch (ignored)?7fb2","webpack:///string_decoder (ignored)","webpack:///node-fetch (ignored)?0f45","webpack:///fs (ignored)?645a","webpack:///node-fetch (ignored)","webpack:///fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MnistContainerComponent } from './mnist/mnist-container/mnist-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MnistContainerComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-tf-digits';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MnistModule } from './mnist/mnist.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, MnistModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"canvas {\\n  border: 1px solid #000;\\n}\\n\\n.canvas-container {\\n  display: grid;\\n  justify-items: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW5pc3QvbW5pc3QtY2FudmFzL21uaXN0LWNhbnZhcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL21uaXN0L21uaXN0LWNhbnZhcy9tbmlzdC1jYW52YXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImNhbnZhcyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG59XG5cbi5jYW52YXMtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAganVzdGlmeS1pdGVtczogY2VudGVyO1xufVxuIl19 */\"","module.exports = \"<div class=\\\"canvas-container\\\">\\n  <!-- <button (click)=\\\"reset()\\\">Reset</button> -->\\n  <h1>Draw a Number and Hit Submit</h1>\\n  <canvas #canvas></canvas>\\n  <button (click)=\\\"submit()\\\">Submit</button>\\n  <button (click)=\\\"reset()\\\">Reset</button>\\n  <h2>Downsampled Input (Input Layer)</h2>\\n  <canvas #downsampled></canvas>\\n</div>\\n\"","import {\n  Component,\n  AfterViewInit,\n  ElementRef,\n  ViewChild,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { switchMap, takeUntil, pairwise } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-mnist-canvas',\n  templateUrl: './mnist-canvas.component.html',\n  styleUrls: ['./mnist-canvas.component.css']\n})\nexport class MnistCanvasComponent implements AfterViewInit {\n  @Output()\n  submission: EventEmitter<any> = new EventEmitter();\n  // a reference to the canvas element from our template\n  @ViewChild('canvas') public canvas: ElementRef;\n  @ViewChild('downsampled') public downsampled: ElementRef;\n\n  // setting a width and height for the canvas\n  @Input() public width = 200;\n  @Input() public height = 200;\n\n  private cx: CanvasRenderingContext2D;\n  private dx: CanvasRenderingContext2D;\n\n  public ngAfterViewInit() {\n    this.init();\n  }\n\n  private init() {\n    // get the context\n    const canvasEl: HTMLCanvasElement = this.canvas.nativeElement;\n    this.cx = canvasEl.getContext('2d', {\n      alpha: false\n    });\n\n    // set the width and height\n    canvasEl.width = this.width;\n    canvasEl.height = this.height;\n\n    // set some default properties about the line\n    this.cx.lineWidth = 0.15 * this.width;\n    this.cx.lineCap = 'round';\n    this.cx.strokeStyle = '#FFF';\n\n    this.cx.fillStyle = '#000';\n    this.cx.fillRect(0, 0, this.width, this.height);\n\n    // we'll implement this method to start capturing mouse events\n    this.captureEvents(canvasEl);\n\n    this.initDown();\n  }\n\n  private initDown() {\n    const downsampledEl: HTMLCanvasElement = this.downsampled.nativeElement;\n\n    // set the width and height\n    downsampledEl.width = 28;\n    downsampledEl.height = 28;\n\n    this.dx = downsampledEl.getContext('2d', {\n      alpha: false\n    });\n  }\n\n  private captureEvents(canvasEl: HTMLCanvasElement) {\n    // this will capture all mousedown events from the canvas element\n    fromEvent(canvasEl, 'mousedown')\n      .pipe(\n        switchMap(e => {\n          // after a mouse down, we'll record all mouse moves\n          return fromEvent(canvasEl, 'mousemove').pipe(\n            // we'll stop (and unsubscribe) once the user releases the mouse\n            // this will trigger a 'mouseup' event\n            takeUntil(fromEvent(canvasEl, 'mouseup')),\n            // we'll also stop (and unsubscribe) once the mouse leaves the canvas (mouseleave event)\n            takeUntil(fromEvent(canvasEl, 'mouseleave')),\n            // pairwise lets us get the previous value to draw a line from\n            // the previous point to the current point\n            pairwise()\n          );\n        })\n      )\n      .subscribe((res: [MouseEvent, MouseEvent]) => {\n        const rect = canvasEl.getBoundingClientRect();\n\n        // previous and current position with the offset\n        const prevPos = {\n          x: res[0].clientX - rect.left,\n          y: res[0].clientY - rect.top\n        };\n\n        const currentPos = {\n          x: res[1].clientX - rect.left,\n          y: res[1].clientY - rect.top\n        };\n\n        // this method we'll implement soon to do the actual drawing\n        this.drawOnCanvas(prevPos, currentPos);\n      });\n  }\n\n  private drawOnCanvas(\n    prevPos: { x: number; y: number },\n    currentPos: { x: number; y: number }\n  ) {\n    // incase the context is not set\n    if (!this.cx) {\n      return;\n    }\n\n    // start our drawing path\n    this.cx.beginPath();\n\n    // we're drawing lines so we need a previous position\n    if (prevPos) {\n      // sets the start point\n      this.cx.moveTo(prevPos.x, prevPos.y); // from\n\n      // draws a line from the start pos until the current position\n      this.cx.lineTo(currentPos.x, currentPos.y);\n\n      // strokes the current path with the styles we set earlier\n      this.cx.stroke();\n    }\n\n    this.downScaleCanvas(this.cx.getImageData(0, 0, this.width, this.height));\n  }\n\n  submit() {\n    // this.cx.scale(28 / this.width, 28 / this.height);\n    // const rawImg = this.cx.getImageData(0, 0, 28, 28);\n    const downscaled = this.downScaleCanvas(\n      this.cx.getImageData(0, 0, this.width, this.height)\n    );\n    const rawImg = downscaled.getImageData(0, 0, 28, 28);\n    const img = [];\n    for (let i = 0; i < rawImg.data.length; i += 4) {\n      const avg =\n        (rawImg.data[i] + rawImg.data[i + 1] + rawImg.data[i + 2]) / 3;\n      img.push((0.98 * avg) / 255 + 0.01);\n    }\n    this.submission.emit(img);\n  }\n\n  reset() {\n    this.init();\n    this.submission.emit(null);\n  }\n\n  downScaleCanvas(cv) {\n    this.initDown();\n    const newCanvas = document.createElement('canvas');\n    newCanvas.width = this.width;\n    newCanvas.height = this.height;\n    newCanvas.getContext('2d').putImageData(cv, 0, 0);\n\n    this.dx.scale(28 / this.width, 28 / this.height);\n    this.dx.drawImage(newCanvas, 0, 0);\n\n    return this.dx;\n  }\n}\n","module.exports = \".layer {\\n  display: flex;\\n  text-align: center;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.layer-img {\\n  margin: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW5pc3QvbW5pc3QtY29udGFpbmVyL21uaXN0LWNvbnRhaW5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbW5pc3QvbW5pc3QtY29udGFpbmVyL21uaXN0LWNvbnRhaW5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxheWVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmxheWVyLWltZyB7XG4gIG1hcmdpbjogNXB4O1xufVxuIl19 */\"","module.exports = \"<div *ngIf=\\\"loading; else canvas\\\" style=\\\"text-align: center\\\">\\n  <h1>Loading...</h1>\\n  <h2 *ngIf=\\\"modelAccuracy$ | async as acc\\\">\\n    Epoch Accuracy: {{ acc | number }}\\n  </h2>\\n</div>\\n<ng-template #canvas>\\n  <button (click)=\\\"toggleVisor()\\\">Toggle Visor</button>\\n  <app-mnist-canvas (submission)=\\\"submission($event)\\\"></app-mnist-canvas>\\n  <div *ngFor=\\\"let layer of layerImgs\\\" style=\\\"text-align: center\\\">\\n    <h3>Layer {{ layer.layer }}: {{ layer.name }}</h3>\\n    <div *ngIf=\\\"layer.multiple; else dense\\\" class=\\\"layer\\\">\\n      <div *ngFor=\\\"let img of layer.data\\\" class=\\\"layer-img\\\">\\n        <app-mnist-img [data]=\\\"img\\\"></app-mnist-img>\\n      </div>\\n    </div>\\n    <ng-template #dense>\\n      <div class=\\\"layer\\\">\\n        <div *ngFor=\\\"let pixel of layer.data\\\">\\n          <app-mnist-pixel [data]=\\\"pixel\\\"></app-mnist-pixel>\\n        </div>\\n      </div>\\n    </ng-template>\\n  </div>\\n  <h1 *ngIf=\\\"prediction\\\">Prediction: {{ prediction }}</h1>\\n  <pre *ngIf=\\\"distribution\\\">{{ distribution | json }}</pre>\\n</ng-template>\\n<div>\\n  <h1>What is this?</h1>\\n  <p>\\n    At ng-conf 2019 I did a tensorflowjs workshop where\\n    <a href=\\\"http://www.cs.cmu.edu/~aharley/vis/\\\">this was demoed.</a>\\n  </p>\\n  <p>\\n    Ironically... it doesn't actually use tensorflowjs (or Angular), so I wanted\\n    to do a quick recreation.\\n  </p>\\n  <p>...but... what does it do?</p>\\n  <p>\\n    You can sketch a number (0-9) and a Convolutional Neural Network will\\n    attempt to predict what number you wrote.\\n  </p>\\n  <p>Once you hit submit, you can see the output of each layer in the CNN.</p>\\n  <p>\\n    The model is very roughly tuned, so the predictions are not very good... I\\n    just wanted to put this together as a VERY rough POC\\n  </p>\\n  <p>Which also explains the lack of styles...</p>\\n</div>\\n\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { MnistService } from '../mnist.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-mnist-container',\n  templateUrl: './mnist-container.component.html',\n  styleUrls: ['./mnist-container.component.css']\n})\nexport class MnistContainerComponent implements OnInit {\n  loading = true;\n  modelAccuracy$: Observable<number>;\n  prediction: number;\n  distribution: number[];\n  layerImgs: any[];\n\n  constructor(private mnist: MnistService) {\n    this.modelAccuracy$ = this.mnist.accuracy;\n  }\n\n  ngOnInit() {\n    this.mnist.run().then(() => {\n      this.loading = false;\n    });\n  }\n\n  submission(img) {\n    if (img) {\n      const { prediction, distribution, layerImgs } = this.mnist.infer(img);\n      this.prediction = prediction as number;\n      this.distribution = distribution;\n      this.layerImgs = layerImgs;\n    } else {\n      this.prediction = null;\n      this.distribution = null;\n      this.layerImgs = [];\n    }\n  }\n\n  toggleVisor() {\n    this.mnist.toggle();\n  }\n}\n","/**\n * @license\n * Modified by: Matt Martz 2019\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs';\n\nconst IMAGE_SIZE = 784;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nconst TRAIN_TEST_RATIO = 5 / 6;\n\nconst NUM_TRAIN_ELEMENTS = Math.floor(TRAIN_TEST_RATIO * NUM_DATASET_ELEMENTS);\nconst NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\n\nconst MNIST_IMAGES_SPRITE_PATH =\n  'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\nconst MNIST_LABELS_PATH =\n  'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and returns shuffled batches.\n *\n * NOTE: This will get much easier. For now, we do data fetching and\n * manipulation manually.\n */\nexport class MnistData {\n  shuffledTrainIndex: number;\n  shuffledTestIndex: number;\n  datasetImages: Float32Array;\n  datasetLabels: Uint8Array;\n  trainIndices: Uint32Array;\n  testIndices: Uint32Array;\n  trainImages: Float32Array;\n  testImages: Float32Array;\n  trainLabels: Uint8Array;\n  testLabels: Uint8Array;\n\n  constructor() {\n    this.shuffledTrainIndex = 0;\n    this.shuffledTestIndex = 0;\n  }\n\n  async load() {\n    // Make a request for the MNIST sprited image.\n    const img = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const imgRequest = new Promise((resolve, reject) => {\n      img.crossOrigin = '';\n      img.onload = () => {\n        img.width = img.naturalWidth;\n        img.height = img.naturalHeight;\n\n        const datasetBytesBuffer = new ArrayBuffer(\n          NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4\n        );\n\n        const chunkSize = 5000;\n        canvas.width = img.width;\n        canvas.height = chunkSize;\n\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n          const datasetBytesView = new Float32Array(\n            datasetBytesBuffer,\n            i * IMAGE_SIZE * chunkSize * 4,\n            IMAGE_SIZE * chunkSize\n          );\n          ctx.drawImage(\n            img,\n            0,\n            i * chunkSize,\n            img.width,\n            chunkSize,\n            0,\n            0,\n            img.width,\n            chunkSize\n          );\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          for (let j = 0; j < imageData.data.length / 4; j++) {\n            // All channels hold an equal value since the image is grayscale, so\n            // just read the red channel.\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\n          }\n        }\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n        resolve();\n      };\n      img.src = MNIST_IMAGES_SPRITE_PATH;\n    });\n\n    const labelsRequest = fetch(MNIST_LABELS_PATH);\n    const [imgResponse, labelsResponse] = await Promise.all([\n      imgRequest,\n      labelsRequest\n    ]);\n\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n\n    // Create shuffled indices into the train/test set for when we select a\n    // random dataset element for training / validation.\n    this.trainIndices = tf.util.createShuffledIndices(NUM_TRAIN_ELEMENTS);\n    this.testIndices = tf.util.createShuffledIndices(NUM_TEST_ELEMENTS);\n\n    // Slice the the images and labels into train and test sets.\n    this.trainImages = this.datasetImages.slice(\n      0,\n      IMAGE_SIZE * NUM_TRAIN_ELEMENTS\n    );\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.trainLabels = this.datasetLabels.slice(\n      0,\n      NUM_CLASSES * NUM_TRAIN_ELEMENTS\n    );\n    this.testLabels = this.datasetLabels.slice(\n      NUM_CLASSES * NUM_TRAIN_ELEMENTS\n    );\n  }\n\n  nextTrainBatch(batchSize) {\n    return this.nextBatch(\n      batchSize,\n      [this.trainImages, this.trainLabels],\n      () => {\n        this.shuffledTrainIndex =\n          (this.shuffledTrainIndex + 1) % this.trainIndices.length;\n        return this.trainIndices[this.shuffledTrainIndex];\n      }\n    );\n  }\n\n  nextTestBatch(batchSize) {\n    return this.nextBatch(batchSize, [this.testImages, this.testLabels], () => {\n      this.shuffledTestIndex =\n        (this.shuffledTestIndex + 1) % this.testIndices.length;\n      return this.testIndices[this.shuffledTestIndex];\n    });\n  }\n\n  nextBatch(batchSize, data, index) {\n    const batchImagesArray = new Float32Array(batchSize * IMAGE_SIZE);\n    const batchLabelsArray = new Uint8Array(batchSize * NUM_CLASSES);\n\n    for (let i = 0; i < batchSize; i++) {\n      const idx = index();\n\n      const image = data[0].slice(\n        idx * IMAGE_SIZE,\n        idx * IMAGE_SIZE + IMAGE_SIZE\n      );\n      batchImagesArray.set(image, i * IMAGE_SIZE);\n\n      const label = data[1].slice(\n        idx * NUM_CLASSES,\n        idx * NUM_CLASSES + NUM_CLASSES\n      );\n      batchLabelsArray.set(label, i * NUM_CLASSES);\n    }\n\n    const xs = tf.tensor2d(batchImagesArray, [batchSize, IMAGE_SIZE]);\n    const labels = tf.tensor2d(batchLabelsArray, [batchSize, NUM_CLASSES]);\n\n    return { xs, labels };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21uaXN0L21uaXN0LWltZy9tbmlzdC1pbWcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n  <canvas #canvas></canvas>\\n</div>\\n\"","import {\n  Component,\n  AfterViewInit,\n  ElementRef,\n  ViewChild,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { switchMap, takeUntil, pairwise } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-mnist-img',\n  templateUrl: './mnist-img.component.html',\n  styleUrls: ['./mnist-img.component.css']\n})\nexport class MnistImgComponent implements AfterViewInit {\n  @Input()\n  data: number[];\n  // a reference to the canvas element from our template\n  @ViewChild('canvas') public canvas: ElementRef;\n\n  // setting a width and height for the canvas\n  @Input() public width = 100;\n  @Input() public height = 100;\n\n  private cx: CanvasRenderingContext2D;\n\n  public ngAfterViewInit() {\n    this.init();\n  }\n\n  private init() {\n    // get the context\n    const canvasEl: HTMLCanvasElement = this.canvas.nativeElement;\n    const width = Math.sqrt(this.data.length);\n    const height = Math.sqrt(this.data.length);\n    const ratio = height / 28;\n    const scaleFactor = (ratio * this.height * height) / 28;\n    this.cx = null;\n    this.cx = canvasEl.getContext('2d');\n\n    // set the width and height\n    canvasEl.width = this.width * ratio;\n    canvasEl.height = this.height * ratio;\n\n    const tempImg = [];\n    this.data.forEach(dat => {\n      tempImg.push(dat);\n      tempImg.push(dat);\n      tempImg.push(dat);\n      tempImg.push(255);\n    });\n\n    const img = new Uint8ClampedArray(width * height * 4);\n    tempImg.forEach((v, i) => {\n      img[i] = v;\n    });\n\n    const idata = this.cx.createImageData(width, height);\n\n    // set our buffer as source\n    idata.data.set(img);\n\n    const newCanvas = document.createElement('canvas');\n    newCanvas.width = width;\n    newCanvas.height = height;\n    newCanvas.getContext('2d').putImageData(idata, 0, 0);\n\n    this.cx.scale(scaleFactor, scaleFactor);\n    this.cx.drawImage(newCanvas, 0, 0);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21uaXN0L21uaXN0LXBpeGVsL21uaXN0LXBpeGVsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<canvas #canvas></canvas>\\n\"","import {\n  Component,\n  AfterViewInit,\n  ElementRef,\n  ViewChild,\n  Input,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { switchMap, takeUntil, pairwise } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-mnist-pixel',\n  templateUrl: './mnist-pixel.component.html',\n  styleUrls: ['./mnist-pixel.component.css']\n})\nexport class MnistPixelComponent implements AfterViewInit {\n  @Input()\n  data: number;\n  // a reference to the canvas element from our template\n  @ViewChild('canvas') public canvas: ElementRef;\n\n  // setting a width and height for the canvas\n  @Input() public width = 5;\n  @Input() public height = 5;\n\n  private cx: CanvasRenderingContext2D;\n\n  public ngAfterViewInit() {\n    this.init();\n  }\n\n  private init() {\n    // get the context\n    const canvasEl: HTMLCanvasElement = this.canvas.nativeElement;\n    this.cx = canvasEl.getContext('2d');\n\n    // set the width and height\n    canvasEl.width = this.width;\n    canvasEl.height = this.height;\n\n    this.cx.fillStyle = `rgb(${this.data}, ${this.data}, ${this.data})`;\n\n    this.cx.fillRect(0, 0, this.width, this.height);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MnistService } from './mnist.service';\nimport { MnistContainerComponent } from './mnist-container/mnist-container.component';\nimport { MnistCanvasComponent } from './mnist-canvas/mnist-canvas.component';\nimport { MnistImgComponent } from './mnist-img/mnist-img.component';\nimport { MnistPixelComponent } from './mnist-pixel/mnist-pixel.component';\n\n@NgModule({\n  declarations: [MnistContainerComponent, MnistCanvasComponent, MnistImgComponent, MnistPixelComponent],\n  imports: [CommonModule],\n  providers: [MnistService]\n})\nexport class MnistModule {}\n","import { Injectable } from '@angular/core';\nimport { MnistData } from './mnist-data';\nimport * as tf from '@tensorflow/tfjs';\nimport * as tfvis from '@tensorflow/tfjs-vis';\nimport { Subject, BehaviorSubject } from 'rxjs';\nimport { Visor } from '@tensorflow/tfjs-vis/dist/visor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MnistService {\n  data: MnistData;\n  accuracy: BehaviorSubject<number> = new BehaviorSubject(null);\n  model: tf.Sequential;\n  visor: Visor;\n\n  constructor() {}\n\n  async run() {\n    this.data = new MnistData();\n    await this.data.load();\n    this.model = this.getModel();\n    this.visor = tfvis.visor();\n    tfvis.show.modelSummary({ name: 'Model Architecture' }, this.model);\n\n    await this.train();\n    this.visor.close();\n  }\n\n  toggle() {\n    this.visor.toggle();\n  }\n\n  getModel() {\n    const model = tf.sequential();\n\n    const IMAGE_WIDTH = 28;\n    const IMAGE_HEIGHT = 28;\n    const IMAGE_CHANNELS = 1;\n\n    // In the first layer of out convolutional neural network we have\n    // to specify the input shape. Then we specify some paramaters for\n    // the convolution operation that takes place in this layer.\n    model.add(\n      tf.layers.conv2d({\n        inputShape: [IMAGE_WIDTH, IMAGE_HEIGHT, IMAGE_CHANNELS],\n        kernelSize: 3,\n        filters: 6,\n        activation: 'relu'\n      })\n    );\n\n    // The MaxPooling layer acts as a sort of downsampling using max values\n    // in a region instead of averaging.\n    model.add(tf.layers.maxPooling2d({ poolSize: 2, strides: 2 }));\n\n    // Repeat another conv2d + maxPooling stack.\n    // Note that we have more filters in the convolution.\n    model.add(\n      tf.layers.conv2d({ kernelSize: 3, filters: 16, activation: 'relu' })\n    );\n    model.add(tf.layers.maxPooling2d({ poolSize: 2, strides: 2 }));\n\n    // Now we flatten the output from the 2D filters into a 1D vector to prepare\n    // it for input into our last layer. This is common practice when feeding\n    // higher dimensional data to a final classification output layer.\n    model.add(tf.layers.flatten());\n\n    model.add(tf.layers.dense({ units: 64, activation: 'relu' }));\n\n    // Our last layer is a dense layer which has 10 output units, one for each\n    // output class (i.e. 0, 1, 2, 3, 4, 5, 6, 7, 8, 9).\n    const NUM_OUTPUT_CLASSES = 10;\n    model.add(\n      tf.layers.dense({\n        units: NUM_OUTPUT_CLASSES,\n        // kernelInitializer: 'varianceScaling',\n        activation: 'softmax'\n      })\n    );\n\n    // Choose an optimizer, loss function and accuracy metric,\n    // then compile and return the model\n    const optimizer = tf.train.adam();\n    model.compile({\n      optimizer,\n      loss: 'categoricalCrossentropy',\n      metrics: ['accuracy']\n    });\n\n    return model;\n  }\n\n  async train() {\n    const metrics = ['loss', 'val_loss', 'acc', 'val_acc'];\n    const container = {\n      name: 'Model Training',\n      styles: { height: '1000px' }\n    };\n    const fitCallbacks = tfvis.show.fitCallbacks(container, metrics);\n\n    const BATCH_SIZE = 512;\n    const TRAIN_DATA_SIZE = 5500;\n    const TEST_DATA_SIZE = 1000;\n\n    const [trainXs, trainYs] = tf.tidy(() => {\n      const d = this.data.nextTrainBatch(TRAIN_DATA_SIZE);\n      return [d.xs.reshape([TRAIN_DATA_SIZE, 28, 28, 1]), d.labels];\n    });\n\n    const [testXs, testYs] = tf.tidy(() => {\n      const d = this.data.nextTestBatch(TEST_DATA_SIZE);\n      return [d.xs.reshape([TEST_DATA_SIZE, 28, 28, 1]), d.labels];\n    });\n\n    return this.model.fit(trainXs, trainYs, {\n      batchSize: BATCH_SIZE,\n      validationData: [testXs, testYs],\n      epochs: 1,\n      shuffle: true,\n      callbacks: {\n        ...fitCallbacks,\n        onEpochEnd: async (epoch, logs) => {\n          const valAcc = logs.val_acc;\n          console.log(`Accuracy: ${valAcc}`);\n          this.accuracy.next(valAcc);\n          await tf.nextFrame();\n        }\n      }\n    });\n  }\n\n  infer(img) {\n    const inputs = tf.tensor4d(img, [1, 28, 28, 1]);\n    inputs.print();\n    const layerImgs = [];\n    for (let i = 0; i < this.model.layers.length; i++) {\n      const tempModel = tf.sequential();\n      for (let k = 0; k <= i; k++) {\n        tempModel.add(this.model.layers[k]);\n      }\n      const tempOutput = (tempModel.predict(inputs) as any).dataSync();\n      const tempShape = tempModel.layers[tempModel.layers.length - 1]\n        .outputShape as any;\n      let tempImgs = [];\n      if (tempShape.length === 4) {\n        let ind = 0;\n        tempImgs.push([]);\n        for (let m = 0; m < tempOutput.length; m++) {\n          if (m >= (ind + 1) * tempShape[1] * tempShape[2]) {\n            ind++;\n            tempImgs.push([]);\n          }\n          tempImgs[ind].push(255 * tempOutput[m]);\n        }\n        layerImgs.push({\n          layer: i + 1,\n          name: tempModel.layers[tempModel.layers.length - 1].name,\n          multiple: true,\n          data: tempImgs\n        });\n      } else {\n        tempImgs = tempOutput.map(out => 255 * out);\n        layerImgs.push({\n          layer: i + 1,\n          name: tempModel.layers[tempModel.layers.length - 1].name,\n          multiple: false,\n          data: tempImgs\n        });\n      }\n\n      // tempModel.dispose();\n    }\n    const output = this.model.predict(inputs) as any;\n    const distribution = output.dataSync();\n    const axis = 1;\n    const prediction = Array.from(output.argMax(axis).dataSync())[0];\n    inputs.dispose();\n    output.dispose();\n    return { prediction, distribution, layerImgs };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}